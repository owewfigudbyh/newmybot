import os
from random import choice, uniform, randint
import asyncio
import datetime

from aiogram import F, Router, types, Bot
from aiogram.filters.command import CommandStart
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import CHANNEL_ID, REF_URL
from keyboards.client import ClientKeyboard
from other.filters import ChatJoinFilter, RegisteredFilter
from database.db import DataBase

router = Router()


class RegisterState(StatesGroup):
    input_id = State()


class GetSignalStates(StatesGroup):
    chosing_mines = State()


@router.message(CommandStart())
async def start_command(message: types.Message, bot: Bot):
    await DataBase.register(message.from_user.id, verifed="0")
    await message.answer(f"""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>{message.from_user.first_name}!</b>

–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞ - <b>–ø–æ–¥–ø–∏—à–∏—Å—å</b> –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ªü§ù""",
                         reply_markup=await ClientKeyboard.start_keyboard(), parse_mode="HTML")


@router.callback_query(F.data.in_(["check", "back"]), ChatJoinFilter())
async def menu_output(callback: types.CallbackQuery, state: FSMContext):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    current_state = await state.get_state()
    if current_state is None:  # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ None, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ

        await callback.message.answer("""
        –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏<b>BETGURU</b>üî∏!

        üí£Mines - —ç—Ç–æ –≥–µ–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–°–∞–ø—ë—Ä–µ‚Äù.
        –í–∞—à–∞ —Ü–µ–ª—å - –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —è—á–µ–π–∫–∏ –∏ –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å—Å—è –≤ –ª–æ–≤—É—à–∫–∏.

        <code>–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç OpenAI.
        –û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–≤—ë–∑–¥ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 85%.</code>
        ‚ùóÔ∏è –í–ù–ò–ú–ê–ù–ò–ï ‚ùóÔ∏è
        –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ç–æ–ª—å–∫–æ —Å –Ω–æ–≤—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å—Ç—å –Ω–∏–∂–µ –ø–æ –∫–Ω–æ–ø–∫–µ)
        ‚ùóÔ∏è –î–õ–Ø –∏–≥—Ä—ã –±–µ–∑ —Ä–∏—Å–∫–∞ ‚ùóÔ∏è
        –ù—É–∂–µ–Ω –Ω–æ–≤—ã–π, —á–∏—Å—Ç—ã–π –∞–∫–∫–∞—É–Ω—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º
        –¥–µ–ø–æ–∑–∏—Ç–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ BETGURU –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç +500% –∫ –¥–µ–ø–æ–∑–∏—Ç—É (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ)""",
                                      parse_mode="HTML", reply_markup=await ClientKeyboard.menu_keyboard())

        await callback.answer()

    try:
        await callback.message.delete()
    except:
        pass

    await callback.message.answer("""
–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî∏<b>BETGURU</b>üî∏!

üí£Mines - —ç—Ç–æ –≥–µ–º–±–ª–∏–Ω–≥ –∏–≥—Ä–∞ –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ 1win, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º ‚Äú–°–∞–ø—ë—Ä–µ‚Äù.
–í–∞—à–∞ —Ü–µ–ª—å - –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —è—á–µ–π–∫–∏ –∏ –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å—Å—è –≤ –ª–æ–≤—É—à–∫–∏.

<code>–ù–∞—à –±–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –æ—Ç OpenAI.
–û–Ω –º–æ–∂–µ—Ç –ø—Ä–µ–¥—É–≥–∞–¥–∞—Ç—å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∑–≤—ë–∑–¥ —Å –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é 85%.</code>
‚ùóÔ∏è –í–ù–ò–ú–ê–ù–ò–ï ‚ùóÔ∏è
–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, —Ç–æ–ª—å–∫–æ —Å –Ω–æ–≤—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –µ—Å—Ç—å –Ω–∏–∂–µ –ø–æ –∫–Ω–æ–ø–∫–µ)
‚ùóÔ∏è –î–õ–Ø –∏–≥—Ä—ã –±–µ–∑ —Ä–∏—Å–∫–∞ ‚ùóÔ∏è
–ù—É–∂–µ–Ω –Ω–æ–≤—ã–π, —á–∏—Å—Ç—ã–π –∞–∫–∫–∞—É–Ω—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º
–¥–µ–ø–æ–∑–∏—Ç–µ –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–æ–∫–æ–¥ BETGURU –∫–æ—Ç–æ—Ä—ã–π –¥–∞—Å—Ç +500% –∫ –¥–µ–ø–æ–∑–∏—Ç—É (–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ)""",
                                  parse_mode="HTML", reply_markup=await ClientKeyboard.menu_keyboard())

    await callback.answer()


@router.callback_query(F.data == "register")
async def register_handler(callback: types.CallbackQuery, state: FSMContext):
    text = f"""
üî∑ 1. –î–ª—è –Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ —Å–∞–π—Ç–µ —Å –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ú –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–º–æ–∫–æ–¥–∞ kanfilud <a href="{REF_URL}">1WIN</a>
    \n–í–ê–ñ–ù–û‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–ü–†–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –í–í–ï–î–ò –ü–†–û–ú–û–ö–û–î - MINESABUZ9
üî∑ 2. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ c–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–∞—à –∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç–µ (–í–∫–ª–∞–¥–∫–∞ '–ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ' –∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –±—É–¥–µ—Ç –≤–∞—à ID).
üî∑ 3. –ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ –±–æ—Ç—É –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ!"""
    photo = types.FSInputFile("reg.jpg")

    # await callback.message.edit_media(photo)
    try:
        await callback.message.delete()
    except:
        pass

    await callback.message.answer(text, parse_mode="HTML", reply_markup=await ClientKeyboard.register_keyboard())
    await state.set_state(RegisterState.input_id)
    # await callback.message.edit_caption(text)

@router.message(RegisterState.input_id)
async def register_handler_finally(message: types.Message, state: FSMContext):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    attempts = data.get("attempts", 0)  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –≤–≤–æ–¥–∞ ID

    if attempts == 0:
        # –ï—Å–ª–∏ —ç—Ç–æ –ø–µ—Ä–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞
        await message.answer(
            "–ù–µ–≤–µ—Ä–Ω—ã–π ID. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.",
              # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏
        )
        await state.update_data(attempts=1)  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –≤—Ç–æ—Ä–∞—è –ø–æ–ø—ã—Ç–∫–∞
        await DataBase.update_verifed(message.from_user.id)  # –ü–æ–º–µ—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
        await message.answer(
            "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å!",
            reply_markup=ClientKeyboard.on_register_keyboard()
        )

        await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ


@router.callback_query(F.data == "instruction")
async def instucrion_handler(callback: types.CallbackQuery):
    text = f"""
–ë–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –∏ –æ–±—É—á–µ–Ω –Ω–∞ –∫–ª–∞—Å—Ç–µ—Ä–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ üñ• <strong>BETGURU</strong>.
–î–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –±–æ—Ç–∞ –±—ã–ª–æ —Å—ã–≥—Ä–∞–Ω–æ üé∞10.000+ –∏–≥—Ä.

–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–µ–ª–∞—é—Ç –≤ –¥–µ–Ω—å 15-25% –æ—Ç —Å–≤–æ–µ–≥–æ üí∏ –∫–∞–ø–∏—Ç–∞–ª–∞!
<code>–ù–∞ —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç –±–æ—Ç –ø–æ —Å–µ–π –¥–µ–Ω—å –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏  –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è! –¢–æ—á–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 85+ –∏ –≤—ã—à–µ!</code>
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏—Ç–∞ —Å–ª–µ–¥—É–π—Ç–µ —Å–ª–µ–¥—É—é—â–µ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:

üü¢ 1. –ü—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –±—É–∫–º–µ–∫–µ—Ä—Å–∫–æ–π –∫–æ–Ω—Ç–æ—Ä–µ <a href="{REF_URL}">1WIN</a>
–ï—Å–ª–∏ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è - –∑–∞—Ö–æ–¥–∏–º —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º VPN (–®–≤–µ—Ü–∏—è). –í Play Market/App Store –ø–æ–ª–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: Vpnify, Planet VPN, Hotspot VPN –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ!
<code>–ê–ñ–ù–û‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–ü–†–ò –†–ï–ì–ò–°–¢–†–ê–¶–ò–ò –í–í–ï–î–ò –ü–†–û–ú–û–ö–û–î - MINESABUZ9</code>
üü¢ 2. –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞.
üü¢ 3. –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–∞–∑–¥–µ–ª 1win games –∏ –≤—ã–±—Ä–∞—Ç—å –∏–≥—Ä—É üí£'MINES'.
üü¢ 4. –í—ã—Å—Ç–∞–≤–∏—Ç—å –∫–æ–ª-–≤–æ –ª–æ–≤—É—à–µ–∫ –≤ —Ä–∞–∑–º–µ—Ä–µ —Ç—Ä—ë—Ö. –≠—Ç–æ –≤–∞–∂–Ω–æ!
üü¢ 5. –ó–∞–ø—Ä–æ—Å–∏—Ç—å —Å–∏–≥–Ω–∞–ª –≤ –±–æ—Ç–µ –∏ —Å—Ç–∞–≤–∏—Ç—å –ø–æ —Å–∏–≥–Ω–∞–ª–∞–º –∏–∑ –±–æ—Ç–∞.
üü¢ 6. –ü—Ä–∏ –Ω–µ—É–¥–∞—á–Ω–æ–º —Å–∏–≥–Ω–∞–ª–µ —Å–æ–≤–µ—Ç—É–µ–º —É–¥–≤–æ–∏—Ç—å(–•¬≤) —Å—Ç–∞–≤–∫—É —á—Ç–æ –±—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∫—Ä—ã—Ç—å –ø–æ—Ç–µ—Ä—é –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º —Å–∏–≥–Ω–∞–ª–µ."""

    photo = types.FSInputFile("instruction.jpg")

    try:
        await callback.message.delete()
    except:
        pass

    await callback.message.answer_photo(photo, text, reply_markup=await ClientKeyboard.back_keyboard(), parse_mode="HTML")


@router.callback_query(F.data == "get_signal", RegisteredFilter())
async def get_signal_start_handler(callback: types.CallbackQuery, state: FSMContext):
    try:
        await callback.message.delete()
    except:
        pass
    await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –º–∏–Ω", reply_markup=await ClientKeyboard.mines_keyboard())
    await state.set_state(GetSignalStates.chosing_mines)


@router.callback_query(F.data == "get_signal_again", RegisteredFilter())
async def get_signal_start_handler(callback: types.CallbackQuery, state: FSMContext, bot: Bot):
    data = await state.get_data()
    pth = data['pth']

    try:
        await callback.message.delete()
    except:
        pass
    photo = choice(os.listdir(f"./other/photos/{pth}"))
    number = randint(13425, 124345)
    text = f"""
üí£ –ò–≥—Ä–∞ ‚Ññ{number}
üïì {str(datetime.datetime.now().date()).replace("-", " ")} {":".join(str(datetime.datetime.now().time()).split(":")[:2])}

–®–∞–Ω—Å - {round(uniform(91.0, 98.0),2)}%
"""
    await asyncio.sleep(uniform(0.1, 1.1))
    msg = await callback.message.answer("üåê–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    await asyncio.sleep(uniform(0.1, 1.1))
    await bot.edit_message_text(chat_id=callback.from_user.id, message_id=msg.message_id, text="üì∂–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞")
    await asyncio.sleep(uniform(0.1, 1.1))
    await bot.edit_message_text(chat_id=callback.from_user.id, message_id=msg.message_id, text="‚ö†Ô∏è–ò–∑—É—á–∞—é –∑–∞–ø—Ä–æ—Å—ã")
    await asyncio.sleep(uniform(0.1, 1.1))
    await bot.edit_message_text(chat_id=callback.from_user.id, message_id=msg.message_id, text="‚ö†Ô∏è–§–æ—Ä–º–∏—Ä—É—é –æ—Ç–≤–µ—Ç")
    await asyncio.sleep(uniform(0.1, 1.1))
    try:
        await bot.delete_message(chat_id=callback.from_user.id, message_id=msg.message_id)
    except:
        pass

    print(photo)
    await callback.message.answer_photo(photo=types.FSInputFile(f"./other/photos/{pth}/{photo}"),
                                        caption=text, reply_markup=await ClientKeyboard.get_signal_keyboard())


# –≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
@router.callback_query(F.data == "get_signal")
async def get_signal_start_handler(callback: types.CallbackQuery, state: FSMContext):
    await register_handler(callback, state)


@router.callback_query(F.data.in_(["one", "three", "five", "sever"]))
async def get_signal_finaly(callback: types.CallbackQuery, state: FSMContext):
    print(callback.data)
    if callback.data == "one":
        pth = 1
    elif callback.data == "three":
        pth = 3
    elif callback.data == "five":
        pth = 5
    elif callback.data == "sever":
        pth = 7

    await state.update_data(pth=pth)

    photo = choice(os.listdir(f"./other/photos/{pth}"))
    number = randint(13425, 124345)
    text = f"""
üí£ –ò–≥—Ä–∞ ‚Ññ{number}
üïì {str(datetime.datetime.now().date()).replace("-", " ")} {":".join(str(datetime.datetime.now().time()).split(":")[:2])}

–®–∞–Ω—Å - {round(uniform(91.0, 98.0),2)}%
"""

    await asyncio.sleep(uniform(0.1, 1.1))
    await callback.message.edit_text("üåê–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    await asyncio.sleep(uniform(0.1, 1.1))
    await callback.message.edit_text("üì∂–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞")
    await asyncio.sleep(uniform(0.1, 1.1))
    await callback.message.edit_text("‚ö†Ô∏è–ò–∑—É—á–∞—é –∑–∞–ø—Ä–æ—Å—ã")
    await asyncio.sleep(uniform(0.1, 1.1))
    await callback.message.edit_text("‚ö†Ô∏è–§–æ—Ä–º–∏—Ä—É—é –æ—Ç–≤–µ—Ç")
    await asyncio.sleep(uniform(0.1, 1.1))
    try:
        await callback.message.delete()
    except:
        pass

    print(photo)
    await callback.message.answer_photo(photo=types.FSInputFile(f"./other/photos/{pth}/{photo}"),
                                        caption=text, reply_markup=await ClientKeyboard.get_signal_keyboard())
